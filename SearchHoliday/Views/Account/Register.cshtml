@{
    <div class="container">
        <div id="alert" class="alert m-0 d-flex align-items-center fade hide" role="alert">
            <svg class="bi flex-shrink-0 me-2" width="24" height="24"><use xlink:href="#check-circle-fill" /></svg>
            <span>Уведомление</span>
        </div>
        <form method="post" class="form-signup">
            <h2 class="mb-3 fw-normal text-center">Регистрация</h2>

            <div class="form-floating">
                <input type="email" name="email" class="form-control" id="floatingEmail" placeholder="Email">
                <label for="floatingEmail">Адрес электронной почты</label>
            </div>
            <div class="form-floating">
                <input type="password" name="password" class="form-control" id="floatingPassword" placeholder="Password">
                <label for="floatingPassword">Пароль</label>
            </div>
            <div class="form-floating">
                <input type="password" name="confirmPassword" class="form-control" id="floatingConfirmPassword" placeholder="Confirm password">
                <label for="floatingConfirmPassword">Подтвердите пароль</label>
            </div>

            <button id="registerBtn" class="w-100 btn btn-lg btn-primary" type="submit">Зарегистрироваться</button>
            <p class="small text-center text-gray-soft">У вас уже есть аккаунт? <a href="/account/login">Войти</a></p>
        </form>
    </div>

    <script>
        const alertElement = document.querySelector('#alert')
        const registerBtn = document.querySelector('#registerBtn')
        const email = document.querySelector('#floatingEmail')
        const password = document.querySelector('#floatingPassword')
        const confirmPassword = document.querySelector('#floatingConfirmPassword')

        const displayAlert = (message, type) => {
            alertElement.classList.remove('hide')
            const svg = alertElement.querySelector('use')

            if (type == "success") {
                alertElement.classList.add('alert-success')
                svg.href.baseVal = '#check-circle-fill'
            }
            else if (type == "danger") {
                alertElement.classList.add('alert-danger')
                svg.href.baseVal = '#exclamation-triangle-fill'
            }
            else if (type == "warning") {
                alertElement.classList.add('alert-warning')
                svg.href.baseVal = '#exclamation-triangle-fill'
            }
            else {
                alertElement.classList.add('alert-primary')
                svg.href.baseVal = '#info-fill'
            }

            alertElement.classList.add('show')
            alertElement.querySelector('span').innerText = message
            setTimeout(() => {
                alertElement.classList.remove('show')
                alertElement.classList.add('hide')

                if (type == "success") alertElement.classList.remove('alert-success')
                else if (type == "danger") alertElement.classList.remove('alert-danger')
                else if (type == "warning") alertElement.classList.remove('alert-warning')
                else alertElement.classList.remove('alert-primary')
            }, 2000)
        }

        const register = () => {
            if (registerBtn) {
                registerBtn.addEventListener('click', (e) => {
                    e.preventDefault()

                    e.target.disabled = true
                    if (isValidEmail(email.value) && password.value.length >= 6 && password.value == confirmPassword.value) {
                        const formData = new FormData()
                        formData.append('email', email.value)
                        formData.append('password', password.value)
                        formData.append('confirmPassword', confirmPassword.value)

                        fetch('/account/register', {
                            method: 'POST',
                            body: formData
                        }).then(res => {
                            if (!res.ok) {
                                return res.json()
                            }

                            if (res.redirected) {
                                displayAlert("Успешная регистрация", "success");
                                setTimeout(() => document.location = res.url, 1000);
                            }
                        }).then(res => {
                            if (res) {
                                displayAlert(res, "danger")
                            }
                        }).finally(() => {
                            setTimeout(() => e.target.disabled = false, 2000)
                        })
                    } else {
                        setTimeout(() => e.target.disabled = false, 2000)
                    }
                })
            }
        }

        const input = () => {
            const checkEmail = () => {
                if (isValidEmail(email.value)) {
                    email.classList.remove('is-invalid')
                    email.classList.add('is-valid')
                } else {
                    email.classList.remove('is-valid')
                    email.classList.add('is-invalid')
                }
            }
            const checkPassword = () => {
                if (password.value.length >= 6) {
                    password.classList.remove('is-invalid')
                    password.classList.add('is-valid')
                } else {
                    password.classList.remove('is-valid')
                    password.classList.add('is-invalid')
                }
            }
            const checkConfirmPassword = () => {
                if (password.value == confirmPassword.value && password.value.length > 0) {
                    confirmPassword.classList.remove('is-invalid')
                    confirmPassword.classList.add('is-valid')
                } else {
                    confirmPassword.classList.remove('is-valid')
                    confirmPassword.classList.add('is-invalid')
                }
            }

            email.addEventListener('input', () => {
                checkEmail()
            })

            password.addEventListener('input', () => {
                checkPassword()
                checkConfirmPassword()
            })

            confirmPassword.addEventListener('input', () => {
                checkPassword()
                checkConfirmPassword()
            })
        }

        const isValidEmail = (email) => {
            return email.match(
                /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
            )
        }

        input()
        register()
    </script>
}